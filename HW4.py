# Вычислить число ПИ c заданной точностью *d*
# Пример:
# при d = 0.001, π = 3.141
# при d = 0.1, π = 3.1
# при d = 0.00001, π = 3.14154
# d от 0.1 до 0.0000000001

# import math

# d = input('Введите точность округ-ния в формате 0.01 от 10 в степени -1 до 10 в степени -10 -> ')
# d = d[2:len(d)]
# print(round(math.pi,len(d)))


# Задайте натуральное число N. Напишите программу, которая составит список простых множителей числа N.

# num = int(input("Введите число: "))
# x = 2 # первое простое число
# lst = []
# old = num
# while x <= num:
#     if num % x == 0:
#         lst.append(x)
#         num //= x
#         x = 2
#     else:
#         x += 1
# print(f"Простые множители числа {old} приведены в списке: {lst}")

# Задайте последовательность цифр. Напишите программу, которая выведет список неповторяющихся элементов
# исходной последовательности.
# Пример:
# 47756688399943 -> [5]
# 1113384455229 -> [8,9]
# 1115566773322 -> []

# num = int(input("Введите последовательность: "))
# num = list

# list = num
# print(list)

# list_count = []
# for i in list:
#     count = 0
#     for x in list:
#         if x == i:
#             count += 1
#     list_count.append(count)
# print(list_count)

# result = []
# for i in range(len(list_count)):
#     if list_count[i] == 1:
#         result.append(list[i])
# print(result)

# Задана натуральная степень k. Сформировать случайным образом список коэффициентов (значения от -100 до 100)
# многочлена и записать в файл многочлен степени k
# k - максимальная степень многочлена, следующий степень на 1 меньше и так до ноля
# Коэффициенты расставляет random, поэтому при коэффициенте 0 просто пропускаем данную итерацию степени

# Пример:
# k=2 -> 2x² + 4x + 5 = 0 или x² + 5 = 0 или 10x² = 0
# k=5 -> 3x⁵ + 5x⁴ - 6x³ - 3x = 0

# from random import randint
# max_val=100
# u = int(input('Введите натуральную степень k:'))

# Koefficient=[randint(0,max_val) for i in range(u)]+[randint(1,max_val)]
# poly='+'.join([f'{(j,"")[j==1]}x^{i}' for i, j in enumerate(Koefficient) if j][::-1])

# poly=poly.replace('x^1+', 'x+')
# poly=poly.replace('x^0', '')
# poly+=('','1')[poly[-1]=='+']
# poly=(poly, poly[:-2])[poly[-2:]=='^1']
# print(poly)

# Даны два файла, в каждом из которых находится запись многочлена.
# Задача - сформировать файл, содержащий сумму многочленов.

# Пример двух заданных многочленов:
# 23x⁹ - 16x⁸ + 3x⁷ + 15x⁴ - 2x³ + x² + 20 = 0
# 17x⁹ + 15x⁸ - 8x⁷ + 15x⁶ - 10x⁴ + 7x³ - 13x¹ + 33 = 0

